function handleSaveLayout() {
  var e = $(".demo").html();
  if (e != window.demoHtml) {
  //  saveLayout();
    window.demoHtml = e
  }
}
function handleJsIds() {
  handleModalIds();
  handleAccordionIds();
  handleCarouselIds();
  handleTabsIds();
}
function handleAccordionIds() {
  var e = $(".demo #myAccordion");
  var t = randomNumber();
  var n = "panel-" + t;
  var r;
  e.attr("id", n);
  e.find(".panel").each(function (e, t) {
    r = "panel-element-" + randomNumber();
    $(t).find(".panel-title").each(function (e, t) {
      $(t).attr("data-parent", "#" + n);
      $(t).attr("href", "#" + r)
    });
    $(t).find(".panel-collapse").each(function (e, t) {
      $(t).attr("id", r)
    })
  })
}
function handleCarouselIds() {
  var e = $(".demo #myCarousel");
  var t = randomNumber();
  var n = "carousel-" + t;
  e.attr("id", n);
  e.find(".carousel-indicators li").each(function (e, t) {
    $(t).attr("data-target", "#" + n)
  });
  e.find(".left").attr("href", "#" + n);
  e.find(".right").attr("href", "#" + n)
}
function handleModalIds() {
  var e = $(".demo #myModalLink");
  var t = randomNumber();
  var n = "modal-container-" + t;
  var r = "modal-" + t;
  e.attr("id", r);
  e.attr("href", "#" + n);
  e.next().attr("id", n)
}
function handleTabsIds() {
  var e = $(".demo #myTabs");
  var t = randomNumber();
  var n = "tabs-" + t;
  e.attr("id", n);
  e.find(".tab-pane").each(function (e, t) {
    var n = $(t).attr("id");
    var r = "panel-" + randomNumber();
    $(t).attr("id", r);
    $(t).parent().parent().find("a[href=#" + n + "]").attr("href", "#" + r)
  })
}
function randomNumber() {
  return randomFromInterval(1, 1e6)
}
function randomFromInterval(e, t) {
  return Math.floor(Math.random() * (t - e + 1) + e)
}
function gridSystemGenerator() {
  $(".lyrow .preview input").bind("keyup", function () {
    var e = 0;
    var t = "";
    var n = false;
    var r = $(this).val().split(" ", 12);
    $.each(r, function (r, i) {
      if (!n) {
        if (parseInt(i) <= 0)n = true;
        e = e + parseInt(i);
        t += '<div class="col-md-' + i + ' column"></div>'
      }
    });
    if (e == 12 && !n) {
      $(this).parent().next().children().html(t);
      $(this).parent().prev().show()
    } else {
      $(this).parent().prev().hide()
    }
  })
}
function configurationElm(e, t) {
  $(".demo").delegate(".configuration > a", "click", function (e) {
    e.preventDefault();
    var t = $(this).parent().next().next().children();
    $(this).toggleClass("active");
    t.toggleClass($(this).attr("rel"))
  });
  $(".demo").delegate(".configuration .dropdown-menu a", "click", function (e) {
    e.preventDefault();
    var t = $(this).parent().parent();
    var n = t.parent().parent().next().next().children();
    t.find("li").removeClass("active");
    $(this).parent().addClass("active");
    var r = "";
    t.find("a").each(function () {
      r += $(this).attr("rel") + " "
    });
    t.parent().removeClass("open");
    n.removeClass(r);
    n.addClass($(this).attr("rel"))
  })
}
function removeElm() {
  $(".demo").delegate(".remove", "click", function (e) {
    e.preventDefault();
    $(this).parent().remove();
    if (!$(".demo .lyrow").length > 0) {
      clearDemo()
    }
  })
}
function clearDemo() {
  $(".demo").empty()
}
function removeMenuClasses() {
  $("#menu-layoutit li button").removeClass("active")
}
function changeStructure(e, t) {
  $("#download-layout ." + e).removeClass(e).addClass(t)
}
function cleanHtml(e) {
  $(e).parent().append($(e).children().html())
}
function downloadLayoutSrc() {
  var e = "";
  $("#download-layout").children().html($(".demo").html());
  var t = $("#download-layout").children();
  t.find(".preview, .configuration, .drag, .remove").remove();
  t.find(".lyrow").addClass("removeClean");
  t.find(".box-element").addClass("removeClean");
  t.find(".lyrow .lyrow .lyrow .lyrow .lyrow .removeClean").each(function () {
    cleanHtml(this)
  });
  t.find(".lyrow .lyrow .lyrow .lyrow .removeClean").each(function () {
    cleanHtml(this)
  });
  t.find(".lyrow .lyrow .lyrow .removeClean").each(function () {
    cleanHtml(this)
  });
  t.find(".lyrow .lyrow .removeClean").each(function () {
    cleanHtml(this)
  });
  t.find(".lyrow .removeClean").each(function () {
    cleanHtml(this)
  });
  t.find(".removeClean").each(function () {
    cleanHtml(this)
  });
  t.find(".removeClean").remove();
  $("#download-layout .column").removeClass("ui-sortable");
  $("#download-layout .row-fluid").removeClass("clearfix").children().removeClass("column");
  if ($("#download-layout .container").length > 0) {
    changeStructure("row-fluid", "row")
  }
  formatSrc = $.htmlClean($("#download-layout").html(), {
    format: true,
    allowedAttributes: [["id"], ["class"], ["data-toggle"], ["data-target"], ["data-parent"], ["role"], ["data-dismiss"], ["aria-labelledby"], ["aria-hidden"], ["data-slide-to"], ["data-slide"]]
  });
  $("#download-layout").html(formatSrc);
  $("#downloadModal textarea").empty();
  $("#downloadModal textarea").val(formatSrc)
}

var currentDocument = null;
var timerSave = 2e3;
var demoHtml = $(".demo").html();

$(window).resize(function () {
  $("body").css("min-height", $(window).height() - 90);
  $(".demo").css("min-height", $(window).height() - 160)
});

// DOMContentLoaded
$(document).ready(function () {
  $("body").css("min-height", $(window).height() - 90);
  $(".demo").css("min-height", $(window).height() - 160);
  $(".demo, .demo .column").sortable({connectWith: ".column", opacity: .35, handle: ".drag"});
  $(".sidebar-nav .lyrow").draggable({
    connectToSortable: ".demo",
    helper: "clone",
    handle: ".drag",
    drag: function (e, t) {
      t.helper.width(375);
    },
    stop: function (e, t) {
      $(".demo .column").sortable({opacity: .35, connectWith: ".column"})
    }
  });

  $("[data-target=#downloadModal]").click(function (e) {
    e.preventDefault();
    downloadLayoutSrc()
  });
  $("#downloadhtml").click(function () {
    downloadHtmlLayout();
    return false
  });
  $("#edit").click(function () {
    $("body").removeClass("devpreview sourcepreview");
    $("body").addClass("edit");
    removeMenuClasses();
    $(this).addClass("active");
    return false
  });

  $("#devpreview").click(function () {
    $("body").removeClass("edit sourcepreview");
    $("body").addClass("devpreview");
    removeMenuClasses();
    $(this).addClass("active");
    return false
  });

  var bindEditEvents = function(){
    // 编辑JOYUI数据
    $('.editdata').click(function(e){
      var parent = $(this).parent('.box');
      var joyui = parent.children('.joyui-module');
      var textAreaContainer = parent.children('.editdataAreaContainer');
      var textArea = textAreaContainer.children('textarea');
      var uiName = joyui[0].className.split(' ').pop();

      $.ajax({
        url: 'http://localhost:9110/joyui/getDataConfig',
        data: {name: uiName},
        dataType: 'json'
      }).done(function(resp){
        textArea.text(JSON.stringify(resp,null,2));
        textAreaContainer.show();
      }).fail(function(err){
        alert('服务端请求出错，请检查JOYUI模块编写是否正确！');
      });

    });

    // 编辑模块数据按钮  成功操作
    $('.editdataAreaContainer .btn-success').click(function(){
      var container = $(this).parents('.editdataAreaContainer').get(0);
      var joyui = $($(this).parents('.box').get(0)).find('.joyui-module');
      var textarea = $($(this).parents('.box').get(0)).find('textarea');
      var script = $($(this).parents('.box').get(0)).find('script');
      var uiName = joyui[0].className.split(' ').pop();
      $.ajax({
        url: 'http://localhost:9110/joyui/getTemplate',
        data: {name: uiName},
        dataType: 'text'
      }).done(function(resp){
        try{
          JSON.parse(resp);
          alert('该模块没有对应的渲染模板！');
          return;
        }catch(e){
        }

        joyui.replaceWith(template.render(resp)(JSON.parse(textarea[0].value)));
        eval(script.text());
        $(container).hide();
      }).fail(function(){
        alert('该模块没有对应的渲染模板！');
      });
    });

    // 编辑模块数据按钮  失败操作
    $('.editdataAreaContainer .btn-danger').click(function(){
      var textareaContainer = $(this).parents('.editdataAreaContainer');
      textareaContainer.hide();
    });

  }

  // 如果localStorage.referrer为preview，则意味着从预览页进入编辑页面，需要恢复预览前的数据
  if(localStorage.getItem('referrer') == 'preview'){
    $('.demo').replaceWith($(JSON.parse(localStorage.getItem('content')).content));
    localStorage.removeItem('referrer');
    // 设置保存的模块拖动属性
    $(".demo .column").sortable({connectWith: ".column", opacity: .35, handle: ".drag"});
    $(".demo .box").draggable({
      connectToSortable: ".column",
      helper: "clone",
      handle: ".drag",
      drag: function (e, t) {
        t.helper.width(375);
      },
      stop: function (event, ui) {
      //  eval($(this).children('script').html());
      //  bindEditEvents();
      }
    });
  }

  // 预览
  $('.j_preview').click(function(){
    // 预览前默认保存编辑数据
    $('#button-share-modal').click();
    // 为了防止打开新窗口被浏览器屏蔽，采用此种方式：先打开空窗口
    // 待ajax请求完毕重定向新窗口。浏览器的屏蔽规则是“只屏蔽非用户操作打开的页面”
    var _win = window.open('about:blank','_blank');
    var rendered = $('.demo .view')[0].outerHTML.replace(/[\r\n]/g,' ').replace(/\s+/g,' ');
    $.post('http://localhost:9110/joyui/preview',{
      content: rendered
    }).done(function(resp){
      _win.location = '/h5preview/page/h5preview.html';
    }).fail(function(){
      alert('请求出错！');
    });
  });

  $(".nav-header").click(function () {
    $(".sidebar-nav .boxes, .sidebar-nav .rows").hide();
    $(this).next().slideDown()
  });
  removeElm();
  configurationElm();
  gridSystemGenerator();
  setInterval(function () {
    handleSaveLayout()
  }, timerSave);

  var initEvents = function(){
    // 保存编辑数据
    $('#button-share-modal').click(function(){
      var extract = function(content){
        content = content.replace(/[\r\n]/g,' ').replace(/\s+/g,' ');
        return content;
      };

      if(!window.localStorage){
        alert('您的浏览器版本过低，请使用支持localstorage特性的浏览器，如Chrome、Edge等！')
      }
      var co = {
        content: extract($('.demo')[0].outerHTML),
      };

      // localstorage中保存数据，用于继续使用
      var lco = co;

      try{
        lco = JSON.stringify(lco);
        window.localStorage.setItem('content',lco);
      }catch(e){
        alert('保存出错...');
      }
    });

    // 下载搭建页面
    $('#download').click(function(){
      // 预览前默认保存编辑数据
      $('#button-share-modal').click();
      try{
        var rendered = $('.demo .view')[0].outerHTML.replace(/[\r\n]/g,' ').replace(/\s+/g,' ');
      }catch(e){
        alert('没有数据！');
      }

      function downloadFile(fileName, content){
        var aLink = document.createElement('a');
        var blob = new Blob([content]);
        var evt = document.createEvent("HTMLEvents");
        document.body.appendChild(aLink);
        aLink.download = fileName;
        aLink.href = URL.createObjectURL(blob);
        aLink.click()
      }
      $.post('http://localhost:9110/joyui/download',{
        content: rendered
      }).done(function(resp){
        downloadFile('download.html',resp);
      }).fail(function(){
        alert('请求出错！');
      });
    });

    // 清空操作
    $("#clear").click(function (e) {
      e.preventDefault();
      clearDemo();
      // 删除localStorage缓存
      localStorage.removeItem('content');
    });

    // 发布操作
    $('#publish').click(function(){
      try{
        var rendered = $('.demo .view')[0].outerHTML.replace(/[\r\n]/g,' ').replace(/\s+/g,' ');
      }catch(e){
        alert('没有数据！');
      }

      $.post('http://localhost:9110/joyui/publish',{
        content: rendered
      }).done(function(resp){
        resp = JSON.parse(resp);
        alert('发布成功，请查看链接：' + resp.url);
      }).fail(function(){
        alert('请求出错！');
      });
    });
  };

  initEvents();

  // 渲染所有的最新模块
  $.ajax({
    url: 'http://localhost:9110/joyui/getJoyuis',
    dataType: 'json'
  }).done(function(resp){
    template.config(
      'escape',false
    );
    var html = template('joyuis', resp);
    $('#elmComponents').html(html);

    // 设置拖动
    $(".sidebar-nav .box").draggable({
      connectToSortable: ".column",
      helper: "clone",
      handle: ".drag",
      drag: function (e, t) {
        t.helper.width(375);
      },
      stop: function (event, ui) {
        //  handleJsIds();
        eval($(this).children('script').html());
        bindEditEvents();
      }
    });
  }).fail(function(err){
    alert('服务端请求出错，请检查JOYUI模块编写是否正确！');
  });
})

